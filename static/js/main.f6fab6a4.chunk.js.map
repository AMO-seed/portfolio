{"version":3,"sources":["images/project-images/weatherRecordingAPI.png","images/project-images/HighStreetGym.png","components/layout/Navbar.js","components/pages/Home.js","components/projects/WeatherRecordingAPI.js","components/projects/HighStreetGym.js","components/pages/Projects.js","components/pages/Skills.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","useState","homeColor","setHomeColor","navColor","setNavColor","projectsColor","setProjectsColor","skillsColor","setSkillsColor","className","activeClass","to","spy","smooth","duration","onSetActive","onSetInactive","Home","show","setShow","href","target","rel","onClick","Modal","onHide","size","centered","Header","closeButton","Title","Body","Footer","WeatherRecordingAPI","glareEnable","glareMaxOpacity","glareColor","glarePosition","scale","transitionSpeed","tiltAxis","src","weatherAPIImg","alt","HighStreetGym","HighStreetGymImg","Projects","Skills","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f6fab6a4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/weatherRecordingAPI.40e108cd.png\";","module.exports = __webpack_public_path__ + \"static/media/HighStreetGym.295c57db.png\";","import React, { useState } from \"react\";\r\nimport { Link } from \"react-scroll\";\r\n\r\nconst Navbar = () => {\r\n  //Scroll spy state change\r\n  const [homeColor, setHomeColor] = useState(\"nav-link text-light\");\r\n  const [navColor, setNavColor] = useState(\r\n    \"navbar navbar-expand navbar-dark fixed-top\"\r\n  );\r\n\r\n  const handleHomeActive = () => {\r\n    setNavColor(\"navbar navbar-expand fixed-top\");\r\n    setHomeColor(\"nav-link text-primary\");\r\n  };\r\n  const handleHomeInactive = () => {\r\n    setNavColor(\"navbar navbar-expand navbar-dark fixed-top\");\r\n    setHomeColor(\"nav-link text-light\");\r\n  };\r\n\r\n  const [projectsColor, setProjectsColor] = useState(\"nav-link text-light\");\r\n  const handleProjectsActive = () => setProjectsColor(\"nav-link text-primary\");\r\n  const handleProjectsInactive = () => setProjectsColor(\"nav-link text-light\");\r\n\r\n  const [skillsColor, setSkillsColor] = useState(\"nav-link text-light\");\r\n  const handleSkillsActive = () => setSkillsColor(\"nav-link text-primary\");\r\n  const handleSkillsInactive = () => setSkillsColor(\"nav-link text-light\");\r\n\r\n  // const [contactColor, setContactColor] = useState(\"nav-link text-light\");\r\n  // const handleContactActive = () => setContactColor(\"nav-link text-primary\");\r\n  // const handleContactInactive = () => setContactColor(\"nav-link text-light\");\r\n\r\n  return (\r\n    <nav className={navColor}>\r\n      <div className=\"container\">\r\n        <ul className=\"navbar-nav m-auto\">\r\n          <li className=\"nav-item mx-3\">\r\n            <Link\r\n              activeClass=\"active\"\r\n              to=\"home\"\r\n              spy={true}\r\n              smooth={true}\r\n              duration={500}\r\n              className={homeColor}\r\n              onSetActive={handleHomeActive}\r\n              onSetInactive={handleHomeInactive}\r\n            >\r\n              HOME\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item mx-3\">\r\n            <Link\r\n              activeClass=\"active\"\r\n              to=\"skills\"\r\n              spy={true}\r\n              smooth={true}\r\n              duration={500}\r\n              className={skillsColor}\r\n              onSetActive={handleSkillsActive}\r\n              onSetInactive={handleSkillsInactive}\r\n            >\r\n              SKILL\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item mx-3\">\r\n            <Link\r\n              activeClass=\"active\"\r\n              to=\"projects\"\r\n              spy={true}\r\n              smooth={true}\r\n              duration={500}\r\n              className={projectsColor}\r\n              onSetActive={handleProjectsActive}\r\n              onSetInactive={handleProjectsInactive}\r\n            >\r\n              PROJECT\r\n            </Link>\r\n          </li>\r\n          {/* <li className='nav-item mx-3'>\r\n            <Link\r\n              activeClass='active'\r\n              to='contact'\r\n              spy={true}\r\n              smooth={true}\r\n              duration={500}\r\n              className={contactColor}\r\n              onSetActive={handleContactActive}\r\n              onSetInactive={handleContactInactive}\r\n            >\r\n              CONTACT\r\n            </Link>\r\n          </li> */}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState} from \"react\";\r\n// import resume from \"../../resume/CV_Amo_Chen.pdf\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nconst Home = () => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  // const [copySuccess, setCopySuccess] = useState(\"\");\r\n  // const textAreaRef = useRef(null);\r\n\r\n  // function copyToClipboard(e) {\r\n  //   textAreaRef.current.select();\r\n  //   document.execCommand(\"copy\");\r\n  //   // This is just personal preference.\r\n  //   // I prefer to not show the the whole text area selected.\r\n  //   e.target.focus();\r\n  //   setCopySuccess(\"Copied!\");\r\n  // }\r\n  return (\r\n    <section className=\"home\">\r\n      <div className=\"home-background\">\r\n        <div className=\"overlay\">\r\n          {/* Background animation */}\r\n          <ul className=\"circles\">\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className=\"home-content text-center\">\r\n        <p className=\"text-light mb-0\">Hello. I'm</p>\r\n        <h1 className=\"text-light title\">AMO CHEN</h1>\r\n\r\n        <h3 className=\"text-primary\">\r\n          Full-stack Developer | Front-end Developer\r\n        </h3>\r\n        <div className=\"text-center mt-5\">\r\n          <a\r\n            href=\"https://www.linkedin.com/in/amo-chen/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <span>Linkedin</span>\r\n          </a>\r\n          <a\r\n            href=\"https://github.com/Amo2023\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <span>Github</span>\r\n          </a>\r\n          <a href=\"#!\" onClick={handleShow}>\r\n            <span>Contact</span>\r\n          </a>\r\n          {/* <a target='_blank' rel='noopener noreferrer' href={resume}>\r\n            <span>Resume</span>\r\n          </a> */}\r\n\r\n          <Modal show={show} onHide={handleClose} size=\"sm\" centered>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>My Contact</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <form>\r\n                <p>Email: amochen.dev@gmail.com</p>\r\n                <p>Phone: +61 405 666 860</p>\r\n                <p>LinkedIn: https://www.linkedin.com/in/amo-chen/</p>\r\n\r\n                {/* <input\r\n                  ref={textAreaRef}\r\n                  defaultValue='amochen.dev@gmail.com'\r\n                  style={{ borderWidth: \"0px\" }}\r\n                ></input> */}\r\n              </form>\r\n            </Modal.Body>\r\n            <Modal.Footer className=\"py-1\">\r\n              {/* {copySuccess} */}\r\n              {/* <Button\r\n                variant='secondary'\r\n                onClick={(handleClose, copyToClipboard)}\r\n              >\r\n                Copy\r\n              </Button> */}\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport weatherAPIImg from \"../../images/project-images/weatherRecordingAPI.png\";\r\nimport Tilt from \"react-parallax-tilt\";\r\n\r\nconst WeatherRecordingAPI = () => {\r\n  return (\r\n    <div className=\"project\">\r\n      <h3>Queensland Weather Recording API RESTful API</h3>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          {/* Project Img */}\r\n          <Tilt\r\n            glareEnable={true}\r\n            glareMaxOpacity={0.8}\r\n            glareColor=\"rgba(16, 20, 20, 0.3)\"\r\n            glarePosition=\"all\"\r\n            scale=\"1.25\"\r\n            transitionSpeed={2000}\r\n            tiltAxis=\"y\"\r\n          >\r\n            <div className=\"img-overlay\"></div>\r\n            <img src={weatherAPIImg} alt=\"weatherAPIImg\"></img>\r\n          </Tilt>\r\n          {/* Buttoms */}\r\n          <div className=\"row mt-2 mb-5\">\r\n            {/* <div className=\"col-md-6\">\r\n              <button\r\n                href=\"/\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"btn btn-project\"\r\n                disabled\r\n              >\r\n                <svg>\r\n                  <rect x=\"0\" y=\"0\" fill=\"none\" width=\"100%\" height=\"100%\" />\r\n                </svg>\r\n                In Development..\r\n              </button>\r\n            </div> */}\r\n            {/* <div className=\"col-md-6\">\r\n              <a\r\n                href=\"/\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"btn btn-project\"\r\n              >\r\n                <svg>\r\n                  <rect x=\"0\" y=\"0\" fill=\"none\" width=\"100%\" height=\"100%\" />\r\n                </svg>\r\n                View Code\r\n              </a>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <h5 className=\"text-primary mb-3\">Project Overview</h5>\r\n          <div className=\"project-info\">\r\n            <p>\r\n              The Climate Data RESTful API is designed for an educational\r\n              institution to analyze raw climate data collected across\r\n              Queensland through a distributed IoT sensor network. This API\r\n              offers a secure interface for interacting with MongoDB, managing\r\n              weather data, and handling user authentication and authorization.\r\n              The project encompasses designing a MongoDB-based RESTful API that\r\n              supports CRUD operations for climate data and user management. To\r\n              ensure scalability, the API leverages MongoDB’s partitioning\r\n              capabilities, efficiently distributing workload across multiple\r\n              devices, including Raspberry Pi 4 units.\r\n            </p>\r\n            <h5 className=\"text-primary mb-3\">\r\n              Technology Stack and Development Process\r\n            </h5>\r\n\r\n            <p>\r\n              • Designed and implemented RESTful APIs integrated with MongoDB\r\n              (NoSQL) for managing a substantial dataset of weather data in\r\n              Queensland.\r\n            </p>\r\n            <p>• Tested APIs with the Thunder Client.</p>\r\n            <p>\r\n              • Created and optimised queries for effective data storage and\r\n              retrieval.\r\n            </p>\r\n            <p>\r\n              • Engineered various API endpoints with robust validation to\r\n              ensure accurate handling of requests and responses.\r\n            </p>\r\n            <p>\r\n              • Implemented trigger mechanisms for specific data events to\r\n              enhance real-time data processing.\r\n            </p>\r\n            <p>\r\n              • Authored detailed API documentation and conducted thorough\r\n              endpoint testing.\r\n            </p>\r\n            <p>\r\n              • Utilised Swagger to visualise and interact with our API, making\r\n              it easy for back-end implementation.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherRecordingAPI;\r\n","import React from \"react\";\r\nimport HighStreetGymImg from \"../../images/project-images/HighStreetGym.png\";\r\nimport Tilt from \"react-parallax-tilt\";\r\n\r\nconst HighStreetGym = () => {\r\n  return (\r\n    <div className=\"project\">\r\n      <h3>High Street Gym Web App</h3>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <Tilt\r\n            glareEnable={true}\r\n            glareMaxOpacity={0.8}\r\n            glareColor=\"#fff\"\r\n            glarePosition=\"all\"\r\n            scale=\"1.25\"\r\n            transitionSpeed={2000}\r\n            tiltAxis=\"y\"\r\n          >\r\n            <div className=\"img-overlay\"></div>\r\n            <img src={HighStreetGymImg} alt=\"HighStreetGymImg\"></img>\r\n          </Tilt>\r\n          {/* Buttoms */}\r\n          <div className=\"row mt-2 mb-5\">\r\n            {/* <div className=\"col-md-6\">\r\n              <a\r\n                href=\"http://13.239.112.124/\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"btn btn-project\"\r\n              >\r\n                <svg>\r\n                  <rect x=\"0\" y=\"0\" fill=\"none\" width=\"100%\" height=\"100%\" />\r\n                </svg>\r\n                View Project\r\n              </a>\r\n            </div> */}\r\n            {/* <div className=\"col-md-6\">\r\n              <button\r\n                href=\"\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"btn btn-project\"\r\n                disabled\r\n              >\r\n                <svg>\r\n                  <rect x=\"0\" y=\"0\" fill=\"none\" width=\"100%\" height=\"100%\" />\r\n                </svg>\r\n                Source Private\r\n              </button>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <h5 className=\"text-primary mb-3\">Project Overview</h5>\r\n          <div className=\"project-info\">\r\n            <p>\r\n              High Street Gym Web Application is a comprehensive project that\r\n              combines both frontend and backend components to create a seamless\r\n              user experience for gym members. Users can book and manage classes\r\n              at High Street Gym and engage with other members through the\r\n              site’s built-in blog system.\r\n            </p>\r\n            <h5 className=\"text-primary mb-3\">\r\n              Technology Stack and Development Process\r\n            </h5>\r\n\r\n            <p>\r\n              • Developed a responsive gym web app from scratch for both mobile\r\n              and desktop, integrated with a MySQL database using JavaScript,\r\n              React, XML, and SQL.\r\n            </p>\r\n            <p>\r\n              • Implemented features such as gym class calendar display, class\r\n              booking management, user authentication, and content management\r\n              for timetables and blogs using Git and GitHub.\r\n            </p>\r\n            <p>\r\n              • Created reusable server-side data models and client-side UI\r\n              components.\r\n            </p>\r\n            <p>• Styled the website using Tailwind and DaisyUI.</p>\r\n            <p>• Managed source code version control.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HighStreetGym;\r\n","import React from \"react\";\r\nimport WeatherRecordingAPI from \"../projects/WeatherRecordingAPI\";\r\nimport HighStreetGym from \"../projects/HighStreetGym\";\r\n\r\nconst Projects = () => {\r\n  return (\r\n    <section className='projects'>\r\n      <div className='section-head'>\r\n        <h6 className='text-center'>View My Projects</h6>\r\n        <h2 className='text-center'>Projects</h2>\r\n        <div className='underline'></div>\r\n      </div>\r\n      {/* Project Full Stack Project */}\r\n      <HighStreetGym />\r\n      {/* Project Restful API */}\r\n      <WeatherRecordingAPI />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React from \"react\";\r\n\r\nconst Skills = () => {\r\n  return (\r\n    <section className=\"skills\">\r\n      <div className=\"section-head\">\r\n        <h6 className=\"text-center\">View My Skills</h6>\r\n        <h2 className=\"text-center\">Skills</h2>\r\n        <div className=\"underline\"></div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-10 mx-auto\">\r\n          {/* Tech Skills*/}\r\n          <h3>Tech Skills</h3>\r\n          <p>\r\n            • Front-End Development: HTML5, CSS,JavaScript (ES6+), TypeScript,\r\n            SASS, Jest, ReactJS (React Hooks, Context API, Redux, Redux Toolkit,\r\n            React Query), Styled-Components, Tailwind, MUI, Responsive Design,\r\n            Vite, Figma\r\n          </p>\r\n          <p>\r\n            • Back-End Development: Node.js, Express, RESTful API, Swagger,\r\n            Axios, MySQL, MongoDB\r\n          </p>\r\n          <p>\r\n            • Tools and Methodologies: Git/GitHub, Agile/Scrum,JIRA,Thunder\r\n            Client, Postman\r\n          </p>\r\n          <p>• Cloud: AWS S3, EC2</p>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Skills;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport Navbar from \"./components/layout/Navbar\";\r\nimport Home from \"./components/pages/Home\";\r\nimport Projects from \"./components/pages/Projects\";\r\nimport Skills from \"./components/pages/Skills\";\r\n// import Contact from \"./components/pages/Contact\";\r\n\r\nimport \"./styles/css/bootstrap.css\";\r\nimport \"./styles/css/style.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <Home />\r\n      <div className='container'>\r\n        <Skills />\r\n        <Projects />\r\n        {/* <Contact /> */}\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}